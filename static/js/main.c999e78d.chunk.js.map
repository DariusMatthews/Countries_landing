{"version":3,"sources":["images/light-mode-moon.svg","images/dark-mode-moon.svg","images/search-glass.svg","images/down-btn.svg","images/arrow-left.svg","components/Header.jsx","components/Cards.jsx","components/Pagination.jsx","components/Main.jsx","components/Country.jsx","App.js","index.js"],"names":["module","exports","Header","toggle","onClick","className","to","process","src","LightMoon","DarkMoon","alt","Cards","countries","map","country","key","alpha3Code","flag","name","population","region","capital","Pagination","countriesPerPage","totalCountries","paginate","pageNumbers","i","Math","ceil","push","number","Main","useState","userText","setUserText","errorText","setErrorText","userSearch","setUserSearch","userSelect","setUserSelect","setCountries","clicked","setClick","currentPage","setCurrentPage","useEffect","a","async","axios","response","data","fetchAll","fetchSearch","fetchSelect","indexOfLastCountry","indexOfFirstCountry","currentCountries","slice","onSubmit","e","preventDefault","length","console","log","placeholder","onChange","value","target","type","Search","DownBtn","pageNumber","document","body","scrollTop","documentElement","Country","match","params","alpha3code","api","setApi","setCountry","neighbors","setNeighbors","fetchCountry","borders","languages","currencies","arrow","nativeName","subRegion","topLevelDomain","undefined","currency","index","language","neighbor","App","setToggle","exact","path","render","props","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.c999e78d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/light-mode-moon.6f1f85f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/dark-mode-moon.399b1420.svg\";","module.exports = __webpack_public_path__ + \"static/media/search-glass.c6a0effb.svg\";","module.exports = __webpack_public_path__ + \"static/media/down-btn.2c0862a6.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-left.713fe29d.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport DarkMoon from '../images/light-mode-moon.svg';\nimport LightMoon from '../images/dark-mode-moon.svg';\n\nexport default function Header({ toggle, onClick }) {\n  return (\n    <div className={toggle ? \"header header--light\" : \"header header--dark\"}>\n      <Link\n      className={toggle ? \"header__link header__link--light\" : \"header__link header__link--dark\"}\n      to={`${process.env.PUBLIC_URL}/`}>\n        <h1 className=\"header__title\">Where in The World?</h1>\n      </Link>\n      <button className={toggle ? \"btn btn--light\" : \"btn btn--dark\"} onClick={onClick}>\n        <img className={toggle ? \"btn__img\" : \"btn__img btn__img--dark\"} src={toggle ? LightMoon : DarkMoon} alt=\"Moon\" />\n        {toggle ? \"Dark Mode\" : \"Light Mode\"}\n      </button>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default function Cards({countries, toggle}) {\n  return (\n    <div className=\"main__cardSection\">\n    {countries.map(country => (\n      <div \n        key={country.alpha3Code}\n        className={toggle ? \"card card--light\" : \"card card--dark\"}>\n          <Link to={`${process.env.PUBLIC_URL}/country/${country.alpha3Code}`}>\n            <img\n              className=\"card__img\"\n              src={country.flag}\n              alt={country.name}\n            />\n          </Link>\n          <Link\n          className={toggle ? \"card__link card__link--light\" : \"card__link card__link--dark\"}\n          to={`${process.env.PUBLIC_URL}/country/${country.alpha3Code}`}>\n            <h2 className=\"card__title\">{country.name}</h2>\n          </Link>\n          <ul className=\"card__list\">\n            <li className={toggle ? \"card__listItem card__listItem--light\" : \"card__listItem card__listItem--dark\"}>\n              <span className=\"card__description\">\n                Population:\n              </span>\n              {country.population}\n            </li>\n            <li className={toggle ? \"card__listItem card__listItem--light\" : \"card__listItem card__listItem--dark\"}>\n              <span className=\"card__description\">\n                Region:\n              </span>\n              {country.region}\n            </li>\n            <li className={toggle ? \"card__listItem card__listItem--light\" : \"card__listItem card__listItem--dark\"}>\n              <span className=\"card__description\">\n                Capital:\n              </span>\n              {country.capital}\n            </li>\n          </ul>\n      </div>\n      ))}\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default function Pagination({ countriesPerPage, totalCountries, paginate, toggle }) {\n  //empty array for the amount of page numbers\n  const pageNumbers = [];\n\n  //gives us correct amount of page numbers\n  for (let i = 1; i <= Math.ceil(totalCountries / countriesPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <div className=\"pagination\">\n      <ul className=\"pagination__list\">\n        {pageNumbers.map(number => (\n          <li\n            key={number}\n            className={toggle ? \"pagination__item pagination__item--light\" : \"pagination__item pagination__item--dark\"}\n          >\n            <button\n              className={toggle ? \"pagination__link pagination__link--light\" : \"pagination__link pagination__link--dark\"}\n              onClick={() => paginate(number)}\n            >\n              {number}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Cards from './Cards';\nimport Pagination from './Pagination';\nimport Search from '../images/search-glass.svg';\nimport DownBtn from '../images/down-btn.svg';\n\nexport default function Main({ toggle }) {\n  //states to hold all user interactions, countries, and pagination\n  const [userText, setUserText] = useState('');\n  const [errorText, setErrorText] = useState('');\n  const [userSearch, setUserSearch] = useState('');\n  const [userSelect, setUserSelect] = useState('');\n  const [countries, setCountries] = useState([]);\n  const [clicked, setClick] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  //how many countries will be on each page\n  const countriesPerPage = 24;\n\n  //array to hold regions to choose from\n  const regions = [\"Africa\", \"Americas\", \"Asia\", \"Europe\", \"Oceania\"];\n\n  //inital render effect\n  useEffect(() => {\n    const fetchAll = async () => {\n      const response = await axios('https://restcountries.eu/rest/v2/all');\n      const { data } = response\n      setCountries(data);\n    }\n    fetchAll();\n  }, []);\n\n  //user search effect\n  useEffect(() => {\n    const fetchSearch = async () => {\n      const response = await axios(`https://restcountries.eu/rest/v2/name/${userSearch}`);\n      const { data } = response\n      setCountries(data);\n    }\n    fetchSearch();\n  }, [userSearch]);\n\n  //user region select effect\n  useEffect(() => {\n    const fetchSelect = async () => {\n      const response = await axios(`https://restcountries.eu/rest/v2/region/${userSelect}`);\n      const { data } = response\n      setCountries(data);\n    }\n    fetchSelect();\n  }, [userSelect]);\n\n  //input change handler\n  const changeHandler = e => {\n    const { value } = e.target\n    setUserText(value);\n  }\n\n  //submit handler\n  const submitHandler = e => {\n    e.preventDefault();\n    if (userText.length === 0) {\n      setErrorText('Please enter country name');\n    } else {\n      setErrorText('');\n      setUserSearch(userText);\n    }\n    console.log(errorText);\n  }\n\n  //get current cards per page\n  const indexOfLastCountry = currentPage * countriesPerPage;\n  const indexOfFirstCountry = indexOfLastCountry - countriesPerPage;\n  const currentCountries = countries.slice(indexOfFirstCountry, indexOfLastCountry);\n\n  //Change Page and start at top of page on click\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n  };\n\n  return (\n    <div className=\"main\">\n      {/* User Search From */}\n      <form\n        onSubmit={submitHandler}\n        className={toggle ? \"form form--light\" : \"form form--dark\"}>\n        <input\n          placeholder=\"Search for a country...\"\n          onChange={changeHandler}\n          type=\"text\"\n          className={toggle ? \"form__input form__input--light\" : \"form__input form__input--dark\"}\n        />\n        <button\n          type=\"submit\"\n          className={toggle ? \"form__btn btn btn--light\" : \"form__btn btn btn--dark\"}>\n          <img\n            className={toggle ? \"form__img form__img--light\" : \"form__img form__img--dark\"}\n            src={Search}\n            alt=\"search\"\n          />\n        </button>\n      </form>\n\n      <p className=\"main__errorText\">{errorText}</p>\n\n      {/* User Region Filter Options */}\n      <ul\n        className={toggle ? \"list list--light\" : \"list list--dark\"}>\n        <li\n          className={toggle ? \"list__item list__item--title list__item--title-light list__item--light\" : \"list__item list__item--title list__item--title-dark list__item--dark\"}>\n          <button\n            className={toggle ? \"list__btn btn btn--light\" : \"list__btn btn btn--dark\"}\n            onClick={() => setClick(!clicked)}>\n            Filter by Region\n            <img className={toggle ? \"list__img list__img--light\" : \"list__img list__img--dark\"} src={DownBtn} alt=\"Down\" />\n          </button>\n        </li>\n        {clicked && regions.map(region =>\n          <li\n            className={toggle ? \"list__item list__item--light\" : \"list__item list__item--dark\"}>\n            <button\n              className={toggle ? \"btn btn--light\" : \"btn btn--dark\"}\n              onClick={() => setUserSelect(region)}>\n              {region}\n            </button>\n          </li>)\n        }\n      </ul>\n\n      {/* Country Cards  */}\n      <Cards\n        countries={currentCountries}\n        toggle={toggle}\n      />\n\n      {/* Pagination list */}\n      <Pagination\n        countriesPerPage={countriesPerPage} \n        totalCountries={countries.length} \n        paginate={paginate}\n        toggle={toggle}\n      />\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport arrow from '../images/arrow-left.svg';\n\nexport default function Country({ match, toggle }) {\n  // states from country info and api call \n  const [api, setApi] = useState(`https://restcountries.eu/rest/v2/alpha/${match.params.alpha3code}`);\n  const [country, setCountry] = useState({});\n  const [neighbors, setNeighbors] = useState([]);\n\n  // effect on api render \n  useEffect(() => {\n    const fetchCountry = async () => {\n      const response = await axios(api);\n      const { data } = response;\n      setCountry(data);\n    }\n    fetchCountry();\n  }, [api]);\n\n  // effect on country render \n  useEffect(() => {\n    const { borders } = country;\n    setNeighbors(borders);\n  }, [country])\n\n  // pulling specific variables out of country\n  const { languages, currencies } = country;\n\n  return (\n    <div className=\"country\">\n      <Link className=\"country__backLink\" to={`${process.env.PUBLIC_URL}/`}>\n        <div className={toggle ? \"country__backBtn country__backBtn--light\" : \"country__backBtn country__backBtn--dark\"}>\n          <img src={arrow} alt=\"back arrow\" className={toggle ? \"country__arrow country__arrow--light\" : \"country__arrow country__arrow--dark\"} />\n          <span className={toggle ? \"country__btnText country__btnText--light\" : \"country__btnText country__btnText--dark\"}>\n            Back\n        </span>\n        </div>\n      </Link>\n\n      <img src={country.flag} alt={country.name} className=\"country__flag\" />\n\n      <h1 className={toggle ? \"country__title country__title--light\" : \"country__title country__title--dark\"}>\n        {country.name}\n      </h1>\n\n      <ul className=\"country__list country__list--left\">\n        <li className={toggle ? \"country__listItem country__listItem--light\" : \"country__listItem country__listItem--dark\"}>\n          <span className=\"country__subTitle\">\n            Native Name:\n          </span>\n          {country.nativeName}\n        </li>\n        <li className={toggle ? \"country__listItem country__listItem--light\" : \"country__listItem country__listItem--dark\"}>\n          <span className=\"country__subTitle\">\n            Population:\n          </span>\n          {country.population}\n        </li>\n        <li className={toggle ? \"country__listItem country__listItem--light\" : \"country__listItem country__listItem--dark\"}>\n          <span className=\"country__subTitle\">\n            Region:\n          </span>\n          {country.region}\n        </li>\n        <li className={toggle ? \"country__listItem country__listItem--light\" : \"country__listItem country__listItem--dark\"}>\n          <span className=\"country__subTitle\">\n            Sub Region:\n          </span>\n          {country.subRegion}\n        </li>\n        <li className={toggle ? \"country__listItem country__listItem--light\" : \"country__listItem country__listItem--dark\"}>\n          <span className=\"country__subTitle\">\n            Capital:\n          </span>\n          {country.capital}\n        </li>\n      </ul>\n\n      <ul className=\"country__list country__list--right\">\n        <li className={toggle ? \"country__listItem country__listItem--light\" : \"country__listItem country__listItem--dark\"}>\n          <span className=\"country__subTitle\">\n            Top Level Domain:\n          </span>\n          {country.topLevelDomain}\n        </li>\n        <li className={toggle ? \"country__listItem country__listItem--light\" : \"country__listItem country__listItem--dark\"}>\n          <span className=\"country__subTitle\">\n            Currencies:\n          </span>\n          {currencies !== undefined && currencies.map((currency, index) => {\n            //logic for no comma at end of currency array\n            const currencyString = currencies.length === index + 1 ? currency.name : `${currency.name}, `;\n\n            return currencyString;\n          })}\n        </li>\n        <li className={toggle ? \"country__listItem country__listItem--light\" : \"country__listItem country__listItem--dark\"}>\n          <span className=\"country__subTitle\">\n            Languages:\n          </span>\n          {languages !== undefined && languages.map((language, i) => {\n            //logic for no comma at end of languages array\n            const langString = languages.length === i + 1 ? language.name : `${language.name}, `;\n\n            return langString;\n          })}\n        </li>\n      </ul>\n\n      <h2 className={toggle ? \"country__borderTitle country__borderTitle--light\" : \"country__borderTitle country__borderTitle--dark\"}>\n        Border Countries:\n      </h2>\n\n      <div className=\"country__borders\">\n        {/* when neighbors isn't undefined, the array will be mapped out to link to neighboring countries */}\n        {neighbors !== undefined && neighbors.map(neighbor => (\n          <Link\n            key={neighbor}\n            to={`${process.env.PUBLIC_URL}/country/${neighbor}`}>\n            <button\n              onClick={() => setApi(`https://restcountries.eu/rest/v2/alpha/${neighbor}`)}\n              className={toggle ? \"country__borderBtn country__borderBtn--light\" : \"country__borderBtn country__borderBtn--dark\"}\n            >\n              {neighbor}\n            </button>\n          </Link>\n        ))}\n      </div>\n\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Country from './components/Country';\n\n/*\n  steps to build logic:\n    1. Setup states to hold:\n      i. user text input search\n      ii. filtered continent selection\n      iii. countries array info from api\n      iv. Specific country details\n      v. true/false toggle for light/dark mode\n    2. Setup useEffects when:\n      i. page initially renders\n      ii. country api params update\n        - happens when user search or filter continents\n      iii. user wants to see specific country details\n    3. Map countries across the websites as card components\n    4. Setup react router so each card leads to a full page description component of country\n*/\n\nfunction App() {\n  const [toggle, setToggle] = useState(true);\n\n\n  return (\n    <Router>\n      <div className={toggle ? \"App App--light\" : \"App App--dark\"}>\n        <Header\n          toggle={toggle}\n          onClick={() => setToggle(!toggle)}\n        />\n        <Switch>\n          <Route exact path={`${process.env.PUBLIC_URL}/`} render={(props) => <Main {...props} toggle={toggle} />} />\n          <Route path={`${process.env.PUBLIC_URL}/country/:alpha3code`} render={(props) => <Country {...props} toggle={toggle} />} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}